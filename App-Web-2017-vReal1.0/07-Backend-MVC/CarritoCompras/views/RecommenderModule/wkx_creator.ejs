<html ng-app="appRecommender">

<head>
  <script>
    var arrayURIS = new Array();
    var arrayValores = new Array();
    var prefixs = "PREFIX id:   <http://acm.rkbexplorer.com/id/>"+
      "PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>"+
      "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"+
      "PREFIX akt:  <http://www.aktors.org/ontology/portal#>"+
      "PREFIX owl:  <http://www.w3.org/2002/07/owl#>"+
      "PREFIX akt:  <http://www.aktors.org/ontology/portal#>"+
      "PREFIX akts: <http://www.aktors.org/ontology/support#>"

    //add Jonathan start
    var prefixIeee = "PREFIX id:   <http://ieee.rkbexplorer.com/id/>\n"+
      "PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n" +
      "PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n" +
      "PREFIX akt:  <http://www.aktors.org/ontology/portal#>\n" +
      "PREFIX owl:  <http://www.w3.org/2002/07/owl#>\n" +
      "PREFIX akt:  <http://www.aktors.org/ontology/portal#>\n" +
      "PREFIX akts: <http://www.aktors.org/ontology/support#>\n" +
      "PREFIX extension: <http://www.aktors.org/ontology/extension#>\n\n"
    //add Jonathan end

    function exec() {
      var endpoint = d3.select("#endpoint").property("value")
      var sparql = d3.select("#sparql").property("value")
      d3sparql.query(endpoint, sparql, render)
    }

    function render(json) {
      var config = {
        "selector": "#result"
      }
      d3sparql.htmltable2(json, config)
    }

    ////////////////////////////////////////////////////////////////////////////////add Jonathan start

    function  web0(){
      var endpoint = d3.select("#endpoint").property("value")
      var valueQuery = $("#btn"+0).text()
//query sparql
      sparqlTittle = prefixIeee + "SELECT DISTINCT ?title WHERE {<" +valueQuery+"> akt:has-title ?title}"
      sparqlAuthor = prefixIeee + "SELECT DISTINCT ?nameAutor WHERE {<" +valueQuery+"> akt:has-author ?a.?a akt:full-name ?nameAutor}"
      sparqlDate = prefixIeee + "SELECT DISTINCT ?date WHERE {<" +valueQuery+"> akt:has-date ?a.?a akts:has-pretty-name ?date}"
      sparqlAbstract = prefixIeee + "SELECT DISTINCT ?abstract WHERE {<" +valueQuery+"> extension:has-abstract ?abstract}"
      sparqlKeyword = prefixIeee + "SELECT DISTINCT ?keyword WHERE {<" +valueQuery+"> akt:has-ieee-keyword ?keyword }"
      sparqlJournal = prefixIeee + "SELECT DISTINCT ?TittleJournal ?webJournal ?dateJournalYears \n" +
        "WHERE {<" +valueQuery+"> akt:paper-in-proceedings ?a.\n" +
        "?a akt:has-title ?TittleJournal.\n"+
        "?a akt:has-web-address ?webJournal.\n"+
        "?a akt:has-date ?b.?b akts:year-of ?dateJournalYears}"
      sparqlWeb = prefixIeee + "SELECT DISTINCT ?web WHERE {<" +valueQuery+"> akt:has-web-address ?web.}"
//add query sparql to textarea
      $("#sparqlTittle").text(sparqlTittle);
      $("#sparqlAuthor").text(sparqlAuthor);
      $("#sparqlDate").text(sparqlDate);
      $("#sparqlAbstract").text(sparqlAbstract);
      $("#sparqlKeyword").text(sparqlKeyword);
      $("#sparqlJournal").text(sparqlJournal);
      $("#sparqlWeb").text(sparqlWeb);
//add value of textarea to d3sparql
      var sparqlTittle = d3.select("#sparqlTittle").property("value")
      var sparqlAuthor = d3.select("#sparqlAuthor").property("value")
      var sparqlDate = d3.select("#sparqlDate").property("value")
      var sparqlAbstract = d3.select("#sparqlAbstract").property("value")
      var sparqlKeyword = d3.select("#sparqlKeyword").property("value")
      var sparqlJournal = d3.select("#sparqlJournal").property("value")
      var sparqlWeb = d3.select("#sparqlWeb").property("value")
//query d3sparql
      d3sparql.query(endpoint, sparqlTittle,almTittle)
      d3sparql.query(endpoint, sparqlAuthor,almAuthor)
      d3sparql.query(endpoint, sparqlDate,almDate)
      d3sparql.query(endpoint, sparqlAbstract,almAbstract)
      d3sparql.query(endpoint, sparqlKeyword,almKeyword)
      d3sparql.query(endpoint, sparqlJournal,almJournal)
      d3sparql.query(endpoint, sparqlWeb,almWeb)
//result d3sparql
      function  almTittle(json){
        var dataTittle = json.results.bindings;
        $("#titleEEE").val(dataTittle[0].title.value)
      }
      function  almAuthor(json){
        var dataAuthor = json.results.bindings;
        var allAuthor = new Array()
        for( i = 0;i<dataAuthor.length;i ++){
          allAuthor.push(dataAuthor[i].nameAutor.value)
        }
        $("#authorIEEE").val(allAuthor)


        var input = '<input type="number" name="numero_autores" value="'+dataAuthor.length+'">'
          $("#numAuthors").append($(input))
      }
      function  almDate(json){
        var dataDate = json.results.bindings;
        $("#dateIEEE").val(dataDate[0].date.value)
      }
      function  almAbstract(json){
        var dataAbstract = json.results.bindings;
        $("#abstractIEEE").val(dataAbstract[0].abstract.value)
      }
      function  almKeyword(json){
        var dataKeyword = json.results.bindings;
        var allKeyword = new Array()
         for(i = 0; i<dataKeyword.length;i++){
           allKeyword.push(dataKeyword[i].keyword.value)
        }
        $("#keywordIEEE").val(allKeyword)
      }
      function  almJournal(json){
        var dataJournal = json.results.bindings;
        $("#journalIEEE").val(dataJournal[0].TittleJournal.value)
        $("#journalDateIEEE").val(dataJournal[0].dateJournalYears.value)
        $("#journalWebAddressIEEE").val(dataJournal[0].webJournal.value)
      }
      function  almWeb(json){
        var dataWeb = json.results.bindings;
        $("#webIEEE").val(dataWeb[0].web.value);
        $("#webAddress").text(dataWeb[0].web.value).attr("href",dataWeb[0].web.value);
      }
    }
    function  web2(){
      var endpoint = d3.select("#endpoint").property("value")
      var valueQuery = $("#btn"+2).text()
//query sparql
      sparqlTittle = prefixIeee + "SELECT DISTINCT ?title WHERE {<" +valueQuery+"> akt:has-title ?title}"
      sparqlAuthor = prefixIeee + "SELECT DISTINCT ?nameAutor WHERE {<" +valueQuery+"> akt:has-author ?a.?a akt:full-name ?nameAutor}"
      sparqlDate = prefixIeee + "SELECT DISTINCT ?date WHERE {<" +valueQuery+"> akt:has-date ?a.?a akts:has-pretty-name ?date}"
      sparqlAbstract = prefixIeee + "SELECT DISTINCT ?abstract WHERE {<" +valueQuery+"> extension:has-abstract ?abstract}"
      sparqlKeyword = prefixIeee + "SELECT DISTINCT ?keyword WHERE {<" +valueQuery+"> akt:has-ieee-keyword ?keyword }"
      sparqlJournal = prefixIeee + "SELECT DISTINCT ?TittleJournal ?webJournal ?dateJournalYears \n" +
        "WHERE {<" +valueQuery+"> akt:paper-in-proceedings ?a.\n" +
        "?a akt:has-title ?TittleJournal.\n"+
        "?a akt:has-web-address ?webJournal.\n"+
        "?a akt:has-date ?b.?b akts:year-of ?dateJournalYears}"
      sparqlWeb = prefixIeee + "SELECT DISTINCT ?web WHERE {<" +valueQuery+"> akt:has-web-address ?web.}"
//add query sparql to textarea
      $("#sparqlTittle").text(sparqlTittle);
      $("#sparqlAuthor").text(sparqlAuthor);
      $("#sparqlDate").text(sparqlDate);
      $("#sparqlAbstract").text(sparqlAbstract);
      $("#sparqlKeyword").text(sparqlKeyword);
      $("#sparqlJournal").text(sparqlJournal);
      $("#sparqlWeb").text(sparqlWeb);
//add value of textarea to d3sparql
      var sparqlTittle = d3.select("#sparqlTittle").property("value")
      var sparqlAuthor = d3.select("#sparqlAuthor").property("value")
      var sparqlDate = d3.select("#sparqlDate").property("value")
      var sparqlAbstract = d3.select("#sparqlAbstract").property("value")
      var sparqlKeyword = d3.select("#sparqlKeyword").property("value")
      var sparqlJournal = d3.select("#sparqlJournal").property("value")
      var sparqlWeb = d3.select("#sparqlWeb").property("value")
//query d3sparql
      d3sparql.query(endpoint, sparqlTittle,almTittle)
      d3sparql.query(endpoint, sparqlAuthor,almAuthor)
      d3sparql.query(endpoint, sparqlDate,almDate)
      d3sparql.query(endpoint, sparqlAbstract,almAbstract)
      d3sparql.query(endpoint, sparqlKeyword,almKeyword)
      d3sparql.query(endpoint, sparqlJournal,almJournal)
      d3sparql.query(endpoint, sparqlWeb,almWeb)
//result d3sparql
      function  almTittle(json){
        var dataTittle = json.results.bindings;
        $("#titleIEEE").val(dataTittle[0].title.value)
      }
      function  almAuthor(json){
        var dataAuthor = json.results.bindings;
        var allAuthor = new Array()
        for( i = 0;i<dataAuthor.length;i ++){
          allAuthor.push(dataAuthor[i].nameAutor.value)
        }
        $("#authorIEEE").val(allAuthor)

        $("#numAuthors").append("input");
      }
      function  almDate(json){
        var dataDate = json.results.bindings;
        $("#dateIEEE").val(dataDate[0].date.value)
      }
      function  almAbstract(json){
        var dataAbstract = json.results.bindings;
        $("#abstractIEEE").val(dataAbstract[0].abstract.value)
      }
      function  almKeyword(json){
        var dataKeyword = json.results.bindings;
        var allKeyword = new Array()
        for(i = 0; i<dataKeyword.length;i++){
          allKeyword.push(dataKeyword[i].keyword.value)
        }
        $("#keywordIEEE").val(allKeyword)
      }
      function  almJournal(json){
        var dataJournal = json.results.bindings;
        $("#journalIEEE").val(dataJournal[0].TittleJournal.value)
        $("#journalDateIEEE").val(dataJournal[0].dateJournalYears.value)
        $("#journalWebAddressIEEE").val(dataJournal[0].webJournal.value)
      }
      function  almWeb(json){
        var dataWeb = json.results.bindings;
        $("#webIEEE").val(dataWeb[0].web.value);
        $("#webAddress").text(dataWeb[0].web.value).attr("href",dataWeb[0].web.value);
      }
    }
    function  web4(){
      var endpoint = d3.select("#endpoint").property("value")
      var valueQuery = $("#btn"+4).text()
//query sparql
      sparqlTittle = prefixIeee + "SELECT DISTINCT ?title WHERE {<" +valueQuery+"> akt:has-title ?title}"
      sparqlAuthor = prefixIeee + "SELECT DISTINCT ?nameAutor WHERE {<" +valueQuery+"> akt:has-author ?a.?a akt:full-name ?nameAutor}"
      sparqlDate = prefixIeee + "SELECT DISTINCT ?date WHERE {<" +valueQuery+"> akt:has-date ?a.?a akts:has-pretty-name ?date}"
      sparqlAbstract = prefixIeee + "SELECT DISTINCT ?abstract WHERE {<" +valueQuery+"> extension:has-abstract ?abstract}"
      sparqlKeyword = prefixIeee + "SELECT DISTINCT ?keyword WHERE {<" +valueQuery+"> akt:has-ieee-keyword ?keyword }"
      sparqlJournal = prefixIeee + "SELECT DISTINCT ?TittleJournal ?webJournal ?dateJournalYears \n" +
        "WHERE {<" +valueQuery+"> akt:paper-in-proceedings ?a.\n" +
        "?a akt:has-title ?TittleJournal.\n"+
        "?a akt:has-web-address ?webJournal.\n"+
        "?a akt:has-date ?b.?b akts:year-of ?dateJournalYears}"
      sparqlWeb = prefixIeee + "SELECT DISTINCT ?web WHERE {<" +valueQuery+"> akt:has-web-address ?web.}"
//add query sparql to textarea
      $("#sparqlTittle").text(sparqlTittle);
      $("#sparqlAuthor").text(sparqlAuthor);
      $("#sparqlDate").text(sparqlDate);
      $("#sparqlAbstract").text(sparqlAbstract);
      $("#sparqlKeyword").text(sparqlKeyword);
      $("#sparqlJournal").text(sparqlJournal);
      $("#sparqlWeb").text(sparqlWeb);
//add value of textarea to d3sparql
      var sparqlTittle = d3.select("#sparqlTittle").property("value")
      var sparqlAuthor = d3.select("#sparqlAuthor").property("value")
      var sparqlDate = d3.select("#sparqlDate").property("value")
      var sparqlAbstract = d3.select("#sparqlAbstract").property("value")
      var sparqlKeyword = d3.select("#sparqlKeyword").property("value")
      var sparqlJournal = d3.select("#sparqlJournal").property("value")
      var sparqlWeb = d3.select("#sparqlWeb").property("value")
//query d3sparql
      d3sparql.query(endpoint, sparqlTittle,almTittle)
      d3sparql.query(endpoint, sparqlAuthor,almAuthor)
      d3sparql.query(endpoint, sparqlDate,almDate)
      d3sparql.query(endpoint, sparqlAbstract,almAbstract)
      d3sparql.query(endpoint, sparqlKeyword,almKeyword)
      d3sparql.query(endpoint, sparqlJournal,almJournal)
      d3sparql.query(endpoint, sparqlWeb,almWeb)
//result d3sparql
      function  almTittle(json){
        var dataTittle = json.results.bindings;
        $("#titleIEEE").val(dataTittle[0].title.value)
      }
      function  almAuthor(json){
        var dataAuthor = json.results.bindings;
        var allAuthor = new Array()
        for( i = 0;i<dataAuthor.length;i ++){
          allAuthor.push(dataAuthor[i].nameAutor.value)
        }
        $("#authorIEEE").val(allAuthor)
      }
      function  almDate(json){
        var dataDate = json.results.bindings;
        $("#dateIEEE").val(dataDate[0].date.value)
      }
      function  almAbstract(json){
        var dataAbstract = json.results.bindings;
        $("#abstractIEEE").val(dataAbstract[0].abstract.value)
      }
      function  almKeyword(json){
        var dataKeyword = json.results.bindings;
        var allKeyword = new Array()
        for(i = 0; i<dataKeyword.length;i++){
          allKeyword.push(dataKeyword[i].keyword.value)
        }
        $("#keywordIEEE").val(allKeyword)
      }
      function  almJournal(json){
        var dataJournal = json.results.bindings;
        $("#journalIEEE").val(dataJournal[0].TittleJournal.value)
        $("#journalDateIEEE").val(dataJournal[0].dateJournalYears.value)
        $("#journalWebAddressIEEE").val(dataJournal[0].webJournal.value)
      }
      function  almWeb(json){
        var dataWeb = json.results.bindings;
        $("#webIEEE").val(dataWeb[0].web.value);
        $("#webAddress").text(dataWeb[0].web.value).attr("href",dataWeb[0].web.value);
      }
    }
    function  web6(){
      var endpoint = d3.select("#endpoint").property("value")
      var valueQuery = $("#btn"+6).text()
//query sparql
      sparqlTittle = prefixIeee + "SELECT DISTINCT ?title WHERE {<" +valueQuery+"> akt:has-title ?title}"
      sparqlAuthor = prefixIeee + "SELECT DISTINCT ?nameAutor WHERE {<" +valueQuery+"> akt:has-author ?a.?a akt:full-name ?nameAutor}"
      sparqlDate = prefixIeee + "SELECT DISTINCT ?date WHERE {<" +valueQuery+"> akt:has-date ?a.?a akts:has-pretty-name ?date}"
      sparqlAbstract = prefixIeee + "SELECT DISTINCT ?abstract WHERE {<" +valueQuery+"> extension:has-abstract ?abstract}"
      sparqlKeyword = prefixIeee + "SELECT DISTINCT ?keyword WHERE {<" +valueQuery+"> akt:has-ieee-keyword ?keyword }"
      sparqlJournal = prefixIeee + "SELECT DISTINCT ?TittleJournal ?webJournal ?dateJournalYears \n" +
        "WHERE {<" +valueQuery+"> akt:paper-in-proceedings ?a.\n" +
        "?a akt:has-title ?TittleJournal.\n"+
        "?a akt:has-web-address ?webJournal.\n"+
        "?a akt:has-date ?b.?b akts:year-of ?dateJournalYears}"
      sparqlWeb = prefixIeee + "SELECT DISTINCT ?web WHERE {<" +valueQuery+"> akt:has-web-address ?web.}"
//add query sparql to textarea
      $("#sparqlTittle").text(sparqlTittle);
      $("#sparqlAuthor").text(sparqlAuthor);
      $("#sparqlDate").text(sparqlDate);
      $("#sparqlAbstract").text(sparqlAbstract);
      $("#sparqlKeyword").text(sparqlKeyword);
      $("#sparqlJournal").text(sparqlJournal);
      $("#sparqlWeb").text(sparqlWeb);
//add value of textarea to d3sparql
      var sparqlTittle = d3.select("#sparqlTittle").property("value")
      var sparqlAuthor = d3.select("#sparqlAuthor").property("value")
      var sparqlDate = d3.select("#sparqlDate").property("value")
      var sparqlAbstract = d3.select("#sparqlAbstract").property("value")
      var sparqlKeyword = d3.select("#sparqlKeyword").property("value")
      var sparqlJournal = d3.select("#sparqlJournal").property("value")
      var sparqlWeb = d3.select("#sparqlWeb").property("value")
//query d3sparql
      d3sparql.query(endpoint, sparqlTittle,almTittle)
      d3sparql.query(endpoint, sparqlAuthor,almAuthor)
      d3sparql.query(endpoint, sparqlDate,almDate)
      d3sparql.query(endpoint, sparqlAbstract,almAbstract)
      d3sparql.query(endpoint, sparqlKeyword,almKeyword)
      d3sparql.query(endpoint, sparqlJournal,almJournal)
      d3sparql.query(endpoint, sparqlWeb,almWeb)
//result d3sparql
      function  almTittle(json){
        var dataTittle = json.results.bindings;
        $("#titleIEEE").val(dataTittle[0].title.value)
      }
      function  almAuthor(json){
        var dataAuthor = json.results.bindings;
        var allAuthor = new Array()
        for( i = 0;i<dataAuthor.length;i ++){
          allAuthor.push(dataAuthor[i].nameAutor.value)
        }
        $("#authorIEEE").val(allAuthor)
      }
      function  almDate(json){
        var dataDate = json.results.bindings;
        $("#dateIEEE").val(dataDate[0].date.value)
      }
      function  almAbstract(json){
        var dataAbstract = json.results.bindings;
        $("#abstractIEEE").val(dataAbstract[0].abstract.value)
      }
      function  almKeyword(json){
        var dataKeyword = json.results.bindings;
        var allKeyword = new Array()
        for(i = 0; i<dataKeyword.length;i++){
          allKeyword.push(dataKeyword[i].keyword.value)
        }
        $("#keywordIEEE").val(allKeyword)
      }
      function  almJournal(json){
        var dataJournal = json.results.bindings;
        $("#journalIEEE").val(dataJournal[0].TittleJournal.value)
        $("#journalDateIEEE").val(dataJournal[0].dateJournalYears.value)
        $("#journalWebAddressIEEE").val(dataJournal[0].webJournal.value)
      }
      function  almWeb(json){
        var dataWeb = json.results.bindings;
        $("#webIEEE").val(dataWeb[0].web.value);
        $("#webAddress").text(dataWeb[0].web.value).attr("href",dataWeb[0].web.value);
      }
    }
    function  web8(){
      var endpoint = d3.select("#endpoint").property("value")
      var valueQuery = $("#btn"+8).text()
//query sparql
      sparqlTittle = prefixIeee + "SELECT DISTINCT ?title WHERE {<" +valueQuery+"> akt:has-title ?title}"
      sparqlAuthor = prefixIeee + "SELECT DISTINCT ?nameAutor WHERE {<" +valueQuery+"> akt:has-author ?a.?a akt:full-name ?nameAutor}"
      sparqlDate = prefixIeee + "SELECT DISTINCT ?date WHERE {<" +valueQuery+"> akt:has-date ?a.?a akts:has-pretty-name ?date}"
      sparqlAbstract = prefixIeee + "SELECT DISTINCT ?abstract WHERE {<" +valueQuery+"> extension:has-abstract ?abstract}"
      sparqlKeyword = prefixIeee + "SELECT DISTINCT ?keyword WHERE {<" +valueQuery+"> akt:has-ieee-keyword ?keyword }"
      sparqlJournal = prefixIeee + "SELECT DISTINCT ?TittleJournal ?webJournal ?dateJournalYears \n" +
        "WHERE {<" +valueQuery+"> akt:paper-in-proceedings ?a.\n" +
        "?a akt:has-title ?TittleJournal.\n"+
        "?a akt:has-web-address ?webJournal.\n"+
        "?a akt:has-date ?b.?b akts:year-of ?dateJournalYears}"
      sparqlWeb = prefixIeee + "SELECT DISTINCT ?web WHERE {<" +valueQuery+"> akt:has-web-address ?web.}"
//add query sparql to textarea
      $("#sparqlTittle").text(sparqlTittle);
      $("#sparqlAuthor").text(sparqlAuthor);
      $("#sparqlDate").text(sparqlDate);
      $("#sparqlAbstract").text(sparqlAbstract);
      $("#sparqlKeyword").text(sparqlKeyword);
      $("#sparqlJournal").text(sparqlJournal);
      $("#sparqlWeb").text(sparqlWeb);
//add value of textarea to d3sparql
      var sparqlTittle = d3.select("#sparqlTittle").property("value")
      var sparqlAuthor = d3.select("#sparqlAuthor").property("value")
      var sparqlDate = d3.select("#sparqlDate").property("value")
      var sparqlAbstract = d3.select("#sparqlAbstract").property("value")
      var sparqlKeyword = d3.select("#sparqlKeyword").property("value")
      var sparqlJournal = d3.select("#sparqlJournal").property("value")
      var sparqlWeb = d3.select("#sparqlWeb").property("value")
//query d3sparql
      d3sparql.query(endpoint, sparqlTittle,almTittle)
      d3sparql.query(endpoint, sparqlAuthor,almAuthor)
      d3sparql.query(endpoint, sparqlDate,almDate)
      d3sparql.query(endpoint, sparqlAbstract,almAbstract)
      d3sparql.query(endpoint, sparqlKeyword,almKeyword)
      d3sparql.query(endpoint, sparqlJournal,almJournal)
      d3sparql.query(endpoint, sparqlWeb,almWeb)
//result d3sparql
      function  almTittle(json){
        var dataTittle = json.results.bindings;
        $("#titleIEEE").val(dataTittle[0].title.value)
      }
      function  almAuthor(json){
        var dataAuthor = json.results.bindings;
        var allAuthor = new Array()
        for( i = 0;i<dataAuthor.length;i ++){
          allAuthor.push(dataAuthor[i].nameAutor.value)
        }
        $("#authorIEEE").val(allAuthor)
      }
      function  almDate(json){
        var dataDate = json.results.bindings;
        $("#dateIEEE").val(dataDate[0].date.value)
      }
      function  almAbstract(json){
        var dataAbstract = json.results.bindings;
        $("#abstractIEEE").val(dataAbstract[0].abstract.value)
      }
      function  almKeyword(json){
        var dataKeyword = json.results.bindings;
        var allKeyword = new Array()
        for(i = 0; i<dataKeyword.length;i++){
          allKeyword.push(dataKeyword[i].keyword.value)
        }
        $("#keywordIEEE").val(allKeyword)
      }
      function  almJournal(json){
        var dataJournal = json.results.bindings;
        $("#journalIEEE").val(dataJournal[0].TittleJournal.value)
        $("#journalDateIEEE").val(dataJournal[0].dateJournalYears.value)
        $("#journalWebAddressIEEE").val(dataJournal[0].webJournal.value)
      }
      function  almWeb(json){
        var dataWeb = json.results.bindings;
        $("#webIEEE").val(dataWeb[0].web.value);
        $("#webAddress").text(dataWeb[0].web.value).attr("href",dataWeb[0].web.value);
      }
    }
    function  web10(){
      var endpoint = d3.select("#endpoint").property("value")
      var valueQuery = $("#btn"+10).text()
//query sparql
      sparqlTittle = prefixIeee + "SELECT DISTINCT ?title WHERE {<" +valueQuery+"> akt:has-title ?title}"
      sparqlAuthor = prefixIeee + "SELECT DISTINCT ?nameAutor WHERE {<" +valueQuery+"> akt:has-author ?a.?a akt:full-name ?nameAutor}"
      sparqlDate = prefixIeee + "SELECT DISTINCT ?date WHERE {<" +valueQuery+"> akt:has-date ?a.?a akts:has-pretty-name ?date}"
      sparqlAbstract = prefixIeee + "SELECT DISTINCT ?abstract WHERE {<" +valueQuery+"> extension:has-abstract ?abstract}"
      sparqlKeyword = prefixIeee + "SELECT DISTINCT ?keyword WHERE {<" +valueQuery+"> akt:has-ieee-keyword ?keyword }"
      sparqlJournal = prefixIeee + "SELECT DISTINCT ?TittleJournal ?webJournal ?dateJournalYears \n" +
        "WHERE {<" +valueQuery+"> akt:paper-in-proceedings ?a.\n" +
        "?a akt:has-title ?TittleJournal.\n"+
        "?a akt:has-web-address ?webJournal.\n"+
        "?a akt:has-date ?b.?b akts:year-of ?dateJournalYears}"
      sparqlWeb = prefixIeee + "SELECT DISTINCT ?web WHERE {<" +valueQuery+"> akt:has-web-address ?web.}"
//add query sparql to textarea
      $("#sparqlTittle").text(sparqlTittle);
      $("#sparqlAuthor").text(sparqlAuthor);
      $("#sparqlDate").text(sparqlDate);
      $("#sparqlAbstract").text(sparqlAbstract);
      $("#sparqlKeyword").text(sparqlKeyword);
      $("#sparqlJournal").text(sparqlJournal);
      $("#sparqlWeb").text(sparqlWeb);
//add value of textarea to d3sparql
      var sparqlTittle = d3.select("#sparqlTittle").property("value")
      var sparqlAuthor = d3.select("#sparqlAuthor").property("value")
      var sparqlDate = d3.select("#sparqlDate").property("value")
      var sparqlAbstract = d3.select("#sparqlAbstract").property("value")
      var sparqlKeyword = d3.select("#sparqlKeyword").property("value")
      var sparqlJournal = d3.select("#sparqlJournal").property("value")
      var sparqlWeb = d3.select("#sparqlWeb").property("value")
//query d3sparql
      d3sparql.query(endpoint, sparqlTittle,almTittle)
      d3sparql.query(endpoint, sparqlAuthor,almAuthor)
      d3sparql.query(endpoint, sparqlDate,almDate)
      d3sparql.query(endpoint, sparqlAbstract,almAbstract)
      d3sparql.query(endpoint, sparqlKeyword,almKeyword)
      d3sparql.query(endpoint, sparqlJournal,almJournal)
      d3sparql.query(endpoint, sparqlWeb,almWeb)
//result d3sparql
      function  almTittle(json){
        var dataTittle = json.results.bindings;
        $("#titleIEEE").val(dataTittle[0].title.value)
      }
      function  almAuthor(json){
        var dataAuthor = json.results.bindings;
        var allAuthor = new Array()
        for( i = 0;i<dataAuthor.length;i ++){
          allAuthor.push(dataAuthor[i].nameAutor.value)
        }
        $("#authorIEEE").val(allAuthor)
      }
      function  almDate(json){
        var dataDate = json.results.bindings;
        $("#dateIEEE").val(dataDate[0].date.value)
      }
      function  almAbstract(json){
        var dataAbstract = json.results.bindings;
        $("#abstractIEEE").val(dataAbstract[0].abstract.value)
      }
      function  almKeyword(json){
        var dataKeyword = json.results.bindings;
        var allKeyword = new Array()
        for(i = 0; i<dataKeyword.length;i++){
          allKeyword.push(dataKeyword[i].keyword.value)
        }
        $("#keywordIEEE").val(allKeyword)
      }
      function  almJournal(json){
        var dataJournal = json.results.bindings;
        $("#journalIEEE").val(dataJournal[0].TittleJournal.value)
        $("#journalDateIEEE").val(dataJournal[0].dateJournalYears.value)
        $("#journalWebAddressIEEE").val(dataJournal[0].webJournal.value)
      }
      function  almWeb(json){
        var dataWeb = json.results.bindings;
        $("#webIEEE").val(dataWeb[0].web.value);
        $("#webAddress").text(dataWeb[0].web.value).attr("href",dataWeb[0].web.value);
      }
    }
    function  web12(){
      var endpoint = d3.select("#endpoint").property("value")
      var valueQuery = $("#btn"+12).text()
//query sparql
      sparqlTittle = prefixIeee + "SELECT DISTINCT ?title WHERE {<" +valueQuery+"> akt:has-title ?title}"
      sparqlAuthor = prefixIeee + "SELECT DISTINCT ?nameAutor WHERE {<" +valueQuery+"> akt:has-author ?a.?a akt:full-name ?nameAutor}"
      sparqlDate = prefixIeee + "SELECT DISTINCT ?date WHERE {<" +valueQuery+"> akt:has-date ?a.?a akts:has-pretty-name ?date}"
      sparqlAbstract = prefixIeee + "SELECT DISTINCT ?abstract WHERE {<" +valueQuery+"> extension:has-abstract ?abstract}"
      sparqlKeyword = prefixIeee + "SELECT DISTINCT ?keyword WHERE {<" +valueQuery+"> akt:has-ieee-keyword ?keyword }"
      sparqlJournal = prefixIeee + "SELECT DISTINCT ?TittleJournal ?webJournal ?dateJournalYears \n" +
        "WHERE {<" +valueQuery+"> akt:paper-in-proceedings ?a.\n" +
        "?a akt:has-title ?TittleJournal.\n"+
        "?a akt:has-web-address ?webJournal.\n"+
        "?a akt:has-date ?b.?b akts:year-of ?dateJournalYears}"
      sparqlWeb = prefixIeee + "SELECT DISTINCT ?web WHERE {<" +valueQuery+"> akt:has-web-address ?web.}"
//add query sparql to textarea
      $("#sparqlTittle").text(sparqlTittle);
      $("#sparqlAuthor").text(sparqlAuthor);
      $("#sparqlDate").text(sparqlDate);
      $("#sparqlAbstract").text(sparqlAbstract);
      $("#sparqlKeyword").text(sparqlKeyword);
      $("#sparqlJournal").text(sparqlJournal);
      $("#sparqlWeb").text(sparqlWeb);
//add value of textarea to d3sparql
      var sparqlTittle = d3.select("#sparqlTittle").property("value")
      var sparqlAuthor = d3.select("#sparqlAuthor").property("value")
      var sparqlDate = d3.select("#sparqlDate").property("value")
      var sparqlAbstract = d3.select("#sparqlAbstract").property("value")
      var sparqlKeyword = d3.select("#sparqlKeyword").property("value")
      var sparqlJournal = d3.select("#sparqlJournal").property("value")
      var sparqlWeb = d3.select("#sparqlWeb").property("value")
//query d3sparql
      d3sparql.query(endpoint, sparqlTittle,almTittle)
      d3sparql.query(endpoint, sparqlAuthor,almAuthor)
      d3sparql.query(endpoint, sparqlDate,almDate)
      d3sparql.query(endpoint, sparqlAbstract,almAbstract)
      d3sparql.query(endpoint, sparqlKeyword,almKeyword)
      d3sparql.query(endpoint, sparqlJournal,almJournal)
      d3sparql.query(endpoint, sparqlWeb,almWeb)
//result d3sparql
      function  almTittle(json){
        var dataTittle = json.results.bindings;
        $("#titleIEEE").val(dataTittle[0].title.value)
      }
      function  almAuthor(json){
        var dataAuthor = json.results.bindings;
        var allAuthor = new Array()
        for( i = 0;i<dataAuthor.length;i ++){
          allAuthor.push(dataAuthor[i].nameAutor.value)
        }
        $("#authorIEEE").val(allAuthor)
      }
      function  almDate(json){
        var dataDate = json.results.bindings;
        $("#dateIEEE").val(dataDate[0].date.value)
      }
      function  almAbstract(json){
        var dataAbstract = json.results.bindings;
        $("#abstractIEEE").val(dataAbstract[0].abstract.value)
      }
      function  almKeyword(json){
        var dataKeyword = json.results.bindings;
        var allKeyword = new Array()
        for(i = 0; i<dataKeyword.length;i++){
          allKeyword.push(dataKeyword[i].keyword.value)
        }
        $("#keywordIEEE").val(allKeyword)
      }
      function  almJournal(json){
        var dataJournal = json.results.bindings;
        $("#journalIEEE").val(dataJournal[0].TittleJournal.value)
        $("#journalDateIEEE").val(dataJournal[0].dateJournalYears.value)
        $("#journalWebAddressIEEE").val(dataJournal[0].webJournal.value)
      }
      function  almWeb(json){
        var dataWeb = json.results.bindings;
        $("#webIEEE").val(dataWeb[0].web.value);
        $("#webAddress").text(dataWeb[0].web.value).attr("href",dataWeb[0].web.value);
      }
    }
    function  web14(){
      var endpoint = d3.select("#endpoint").property("value")
      var valueQuery = $("#btn"+14).text()
//query sparql
      sparqlTittle = prefixIeee + "SELECT DISTINCT ?title WHERE {<" +valueQuery+"> akt:has-title ?title}"
      sparqlAuthor = prefixIeee + "SELECT DISTINCT ?nameAutor WHERE {<" +valueQuery+"> akt:has-author ?a.?a akt:full-name ?nameAutor}"
      sparqlDate = prefixIeee + "SELECT DISTINCT ?date WHERE {<" +valueQuery+"> akt:has-date ?a.?a akts:has-pretty-name ?date}"
      sparqlAbstract = prefixIeee + "SELECT DISTINCT ?abstract WHERE {<" +valueQuery+"> extension:has-abstract ?abstract}"
      sparqlKeyword = prefixIeee + "SELECT DISTINCT ?keyword WHERE {<" +valueQuery+"> akt:has-ieee-keyword ?keyword }"
      sparqlJournal = prefixIeee + "SELECT DISTINCT ?TittleJournal ?webJournal ?dateJournalYears \n" +
        "WHERE {<" +valueQuery+"> akt:paper-in-proceedings ?a.\n" +
        "?a akt:has-title ?TittleJournal.\n"+
        "?a akt:has-web-address ?webJournal.\n"+
        "?a akt:has-date ?b.?b akts:year-of ?dateJournalYears}"
      sparqlWeb = prefixIeee + "SELECT DISTINCT ?web WHERE {<" +valueQuery+"> akt:has-web-address ?web.}"
//add query sparql to textarea
      $("#sparqlTittle").text(sparqlTittle);
      $("#sparqlAuthor").text(sparqlAuthor);
      $("#sparqlDate").text(sparqlDate);
      $("#sparqlAbstract").text(sparqlAbstract);
      $("#sparqlKeyword").text(sparqlKeyword);
      $("#sparqlJournal").text(sparqlJournal);
      $("#sparqlWeb").text(sparqlWeb);
//add value of textarea to d3sparql
      var sparqlTittle = d3.select("#sparqlTittle").property("value")
      var sparqlAuthor = d3.select("#sparqlAuthor").property("value")
      var sparqlDate = d3.select("#sparqlDate").property("value")
      var sparqlAbstract = d3.select("#sparqlAbstract").property("value")
      var sparqlKeyword = d3.select("#sparqlKeyword").property("value")
      var sparqlJournal = d3.select("#sparqlJournal").property("value")
      var sparqlWeb = d3.select("#sparqlWeb").property("value")
//query d3sparql
      d3sparql.query(endpoint, sparqlTittle,almTittle)
      d3sparql.query(endpoint, sparqlAuthor,almAuthor)
      d3sparql.query(endpoint, sparqlDate,almDate)
      d3sparql.query(endpoint, sparqlAbstract,almAbstract)
      d3sparql.query(endpoint, sparqlKeyword,almKeyword)
      d3sparql.query(endpoint, sparqlJournal,almJournal)
      d3sparql.query(endpoint, sparqlWeb,almWeb)
//result d3sparql
      function  almTittle(json){
        var dataTittle = json.results.bindings;
        $("#titleIEEE").val(dataTittle[0].title.value)
      }
      function  almAuthor(json){
        var dataAuthor = json.results.bindings;
        var allAuthor = new Array()
        for( i = 0;i<dataAuthor.length;i ++){
          allAuthor.push(dataAuthor[i].nameAutor.value)
        }
        $("#authorIEEE").val(allAuthor)
      }
      function  almDate(json){
        var dataDate = json.results.bindings;
        $("#dateIEEE").val(dataDate[0].date.value)
      }
      function  almAbstract(json){
        var dataAbstract = json.results.bindings;
        $("#abstractIEEE").val(dataAbstract[0].abstract.value)
      }
      function  almKeyword(json){
        var dataKeyword = json.results.bindings;
        var allKeyword = new Array()
        for(i = 0; i<dataKeyword.length;i++){
          allKeyword.push(dataKeyword[i].keyword.value)
        }
        $("#keywordIEEE").val(allKeyword)
      }
      function  almJournal(json){
        var dataJournal = json.results.bindings;
        $("#journalIEEE").val(dataJournal[0].TittleJournal.value)
        $("#journalDateIEEE").val(dataJournal[0].dateJournalYears.value)
        $("#journalWebAddressIEEE").val(dataJournal[0].webJournal.value)
      }
      function  almWeb(json){
        var dataWeb = json.results.bindings;
        $("#webIEEE").val(dataWeb[0].web.value);
        $("#webAddress").text(dataWeb[0].web.value).attr("href",dataWeb[0].web.value);
      }
    }
    function  web16(){
      var endpoint = d3.select("#endpoint").property("value")
      var valueQuery = $("#btn"+16).text()
//query sparql
      sparqlTittle = prefixIeee + "SELECT DISTINCT ?title WHERE {<" +valueQuery+"> akt:has-title ?title}"
      sparqlAuthor = prefixIeee + "SELECT DISTINCT ?nameAutor WHERE {<" +valueQuery+"> akt:has-author ?a.?a akt:full-name ?nameAutor}"
      sparqlDate = prefixIeee + "SELECT DISTINCT ?date WHERE {<" +valueQuery+"> akt:has-date ?a.?a akts:has-pretty-name ?date}"
      sparqlAbstract = prefixIeee + "SELECT DISTINCT ?abstract WHERE {<" +valueQuery+"> extension:has-abstract ?abstract}"
      sparqlKeyword = prefixIeee + "SELECT DISTINCT ?keyword WHERE {<" +valueQuery+"> akt:has-ieee-keyword ?keyword }"
      sparqlJournal = prefixIeee + "SELECT DISTINCT ?TittleJournal ?webJournal ?dateJournalYears \n" +
        "WHERE {<" +valueQuery+"> akt:paper-in-proceedings ?a.\n" +
        "?a akt:has-title ?TittleJournal.\n"+
        "?a akt:has-web-address ?webJournal.\n"+
        "?a akt:has-date ?b.?b akts:year-of ?dateJournalYears}"
      sparqlWeb = prefixIeee + "SELECT DISTINCT ?web WHERE {<" +valueQuery+"> akt:has-web-address ?web.}"
//add query sparql to textarea
      $("#sparqlTittle").text(sparqlTittle);
      $("#sparqlAuthor").text(sparqlAuthor);
      $("#sparqlDate").text(sparqlDate);
      $("#sparqlAbstract").text(sparqlAbstract);
      $("#sparqlKeyword").text(sparqlKeyword);
      $("#sparqlJournal").text(sparqlJournal);
      $("#sparqlWeb").text(sparqlWeb);
//add value of textarea to d3sparql
      var sparqlTittle = d3.select("#sparqlTittle").property("value")
      var sparqlAuthor = d3.select("#sparqlAuthor").property("value")
      var sparqlDate = d3.select("#sparqlDate").property("value")
      var sparqlAbstract = d3.select("#sparqlAbstract").property("value")
      var sparqlKeyword = d3.select("#sparqlKeyword").property("value")
      var sparqlJournal = d3.select("#sparqlJournal").property("value")
      var sparqlWeb = d3.select("#sparqlWeb").property("value")
//query d3sparql
      d3sparql.query(endpoint, sparqlTittle,almTittle)
      d3sparql.query(endpoint, sparqlAuthor,almAuthor)
      d3sparql.query(endpoint, sparqlDate,almDate)
      d3sparql.query(endpoint, sparqlAbstract,almAbstract)
      d3sparql.query(endpoint, sparqlKeyword,almKeyword)
      d3sparql.query(endpoint, sparqlJournal,almJournal)
      d3sparql.query(endpoint, sparqlWeb,almWeb)
//result d3sparql
      function  almTittle(json){
        var dataTittle = json.results.bindings;
        $("#titleIEEE").val(dataTittle[0].title.value)
      }
      function  almAuthor(json){
        var dataAuthor = json.results.bindings;
        var allAuthor = new Array()
        for( i = 0;i<dataAuthor.length;i ++){
          allAuthor.push(dataAuthor[i].nameAutor.value)
        }
        $("#authorIEEE").val(allAuthor)
      }
      function  almDate(json){
        var dataDate = json.results.bindings;
        $("#dateIEEE").val(dataDate[0].date.value)
      }
      function  almAbstract(json){
        var dataAbstract = json.results.bindings;
        $("#abstractIEEE").val(dataAbstract[0].abstract.value)
      }
      function  almKeyword(json){
        var dataKeyword = json.results.bindings;
        var allKeyword = new Array()
        for(i = 0; i<dataKeyword.length;i++){
          allKeyword.push(dataKeyword[i].keyword.value)
        }
        $("#keywordIEEE").val(allKeyword)
      }
      function  almJournal(json){
        var dataJournal = json.results.bindings;
        $("#journalIEEE").val(dataJournal[0].TittleJournal.value)
        $("#journalDateIEEE").val(dataJournal[0].dateJournalYears.value)
        $("#journalWebAddressIEEE").val(dataJournal[0].webJournal.value)
      }
      function  almWeb(json){
        var dataWeb = json.results.bindings;
        $("#webIEEE").val(dataWeb[0].web.value);
        $("#webAddress").text(dataWeb[0].web.value).attr("href",dataWeb[0].web.value);
      }
    }
    function  web18(){
      var endpoint = d3.select("#endpoint").property("value")
      var valueQuery = $("#btn"+18).text()
//query sparql
      sparqlTittle = prefixIeee + "SELECT DISTINCT ?title WHERE {<" +valueQuery+"> akt:has-title ?title}"
      sparqlAuthor = prefixIeee + "SELECT DISTINCT ?nameAutor WHERE {<" +valueQuery+"> akt:has-author ?a.?a akt:full-name ?nameAutor}"
      sparqlDate = prefixIeee + "SELECT DISTINCT ?date WHERE {<" +valueQuery+"> akt:has-date ?a.?a akts:has-pretty-name ?date}"
      sparqlAbstract = prefixIeee + "SELECT DISTINCT ?abstract WHERE {<" +valueQuery+"> extension:has-abstract ?abstract}"
      sparqlKeyword = prefixIeee + "SELECT DISTINCT ?keyword WHERE {<" +valueQuery+"> akt:has-ieee-keyword ?keyword }"
      sparqlJournal = prefixIeee + "SELECT DISTINCT ?TittleJournal ?webJournal ?dateJournalYears \n" +
        "WHERE {<" +valueQuery+"> akt:paper-in-proceedings ?a.\n" +
        "?a akt:has-title ?TittleJournal.\n"+
        "?a akt:has-web-address ?webJournal.\n"+
        "?a akt:has-date ?b.?b akts:year-of ?dateJournalYears}"
      sparqlWeb = prefixIeee + "SELECT DISTINCT ?web WHERE {<" +valueQuery+"> akt:has-web-address ?web.}"
//add query sparql to textarea
      $("#sparqlTittle").text(sparqlTittle);
      $("#sparqlAuthor").text(sparqlAuthor);
      $("#sparqlDate").text(sparqlDate);
      $("#sparqlAbstract").text(sparqlAbstract);
      $("#sparqlKeyword").text(sparqlKeyword);
      $("#sparqlJournal").text(sparqlJournal);
      $("#sparqlWeb").text(sparqlWeb);
//add value of textarea to d3sparql
      var sparqlTittle = d3.select("#sparqlTittle").property("value")
      var sparqlAuthor = d3.select("#sparqlAuthor").property("value")
      var sparqlDate = d3.select("#sparqlDate").property("value")
      var sparqlAbstract = d3.select("#sparqlAbstract").property("value")
      var sparqlKeyword = d3.select("#sparqlKeyword").property("value")
      var sparqlJournal = d3.select("#sparqlJournal").property("value")
      var sparqlWeb = d3.select("#sparqlWeb").property("value")
//query d3sparql
      d3sparql.query(endpoint, sparqlTittle,almTittle)
      d3sparql.query(endpoint, sparqlAuthor,almAuthor)
      d3sparql.query(endpoint, sparqlDate,almDate)
      d3sparql.query(endpoint, sparqlAbstract,almAbstract)
      d3sparql.query(endpoint, sparqlKeyword,almKeyword)
      d3sparql.query(endpoint, sparqlJournal,almJournal)
      d3sparql.query(endpoint, sparqlWeb,almWeb)
//result d3sparql
      function  almTittle(json){
        var dataTittle = json.results.bindings;
        $("#titleIEEE").val(dataTittle[0].title.value)
      }
      function  almAuthor(json){
        var dataAuthor = json.results.bindings;
        var allAuthor = new Array()
        for( i = 0;i<dataAuthor.length;i ++){
          allAuthor.push(dataAuthor[i].nameAutor.value)
        }
        $("#authorIEEE").val(allAuthor)
      }
      function  almDate(json){
        var dataDate = json.results.bindings;
        $("#dateIEEE").val(dataDate[0].date.value)
      }
      function  almAbstract(json){
        var dataAbstract = json.results.bindings;
        $("#abstractIEEE").val(dataAbstract[0].abstract.value)
      }
      function  almKeyword(json){
        var dataKeyword = json.results.bindings;
        var allKeyword = new Array()
        for(i = 0; i<dataKeyword.length;i++){
          allKeyword.push(dataKeyword[i].keyword.value)
        }
        $("#keywordIEEE").val(allKeyword)
      }
      function  almJournal(json){
        var dataJournal = json.results.bindings;
        $("#journalIEEE").val(dataJournal[0].TittleJournal.value)
        $("#journalDateIEEE").val(dataJournal[0].dateJournalYears.value)
        $("#journalWebAddressIEEE").val(dataJournal[0].webJournal.value)
      }
      function  almWeb(json){
        var dataWeb = json.results.bindings;
        $("#webIEEE").val(dataWeb[0].web.value);
        $("#webAddress").text(dataWeb[0].web.value).attr("href",dataWeb[0].web.value);
      }
    }

    //////////////////////////////////////////////////////////////////////////////////add Jonathan end


    function recom(){

      var sparql = prefixs + "SELECT ?cr1URI WHERE {"+
        "{?cr1URI ?link <http://acm.rkbexplorer.com/id/100233>.}}"
      var endpoint = d3.select("#endpoint").property("value")
      d3sparql.query(endpoint, sparql,almArr)
    }

    function  almArr(json){
      var articsArr = json.results.bindings;
      for(i in articsArr){
        arrayURIS[i] = articsArr[i].cr1URI.value
      }
      var sparqlRec;
      for(i=0 ; i<arrayURIS.length ; i++){
        sparqlRec= prefixs +
          "SELECT ?links WHERE{"+
          //"{ <http://acm.rkbexplorer.com/id/100233> ?links " + "<" +arrURI[i] + ">.}"+
          //"UNION"+
          "{<"+arrayURIS[i]+">" + " ?links <http://acm.rkbexplorer.com/id/100233>.}"+
          "}"
        var endpoint = d3.select("#endpoint").property("value")
        d3sparql.query(endpoint,sparqlRec,almValues)
      }

      console.log(arrayValores.length)

    }

    function almValues(json){
      var uris = json.results.bindings;
      arrayValores.push(uris.length);
    }

    function exec_offline() {
      d3.json("cache/interpro/1117-hk.json", render)
    }
    function toggle() {
      d3sparql.toggle()
    }
  </script>
</head>
<body ng-controller="Controller">
<br>
<div id="metadata">
  <h1>Metadatos Sincronizados en Wikindx en relación al autor </h1>
  <h2> <%= query.creatorId%>- <%= creator.creatorFirstname%> <%= creator.creatorSurname%>  </h2>
  <br>
  <div class="row">
    <label class="col-1 col-form-label">Nombre:</label>
    <div class="col-5">
      <input class="form-control" type="text"  value="<%= query.creatorFirstname%>" disabled>
    </div>
    <label class="col-1 col-form-label">Apellido:</label>
    <div class="col-5">
      <input class="form-control" type="text"  value="<%= query.creatorSurname%>" disabled>
    </div>
  </div>
  <div class="row">
    <label class="col-1 col-form-label">Revista:</label>
    <div class="col-5">
      <input class="form-control" type="text"  value="<%= journal%>" disabled>
    </div>
    <label class="col-1 col-form-label">Editor:</label>
    <div class="col-5">
      <input class="form-control" type="text"  value="<%= publisher%>(<%= locationPublisher%>)" disabled>
    </div>
  </div>
  <div class="row">
    <label class="col-1 col-form-label">Titulo:</label>
    <div class="col-11">
      <input class="form-control" id="title" type="text"  value="<%= query.resourceTitle%>" disabled>
    </div>
    <label class="col-1 col-form-label">Categoria:</label>
    <div class="col-11">
      <input class="form-control" type="text"  value="<%= category%>" disabled>
    </div>
    <label class="col-1 col-form-label">Keywords:</label>
    <div class="col-11">
      <input class="form-control" type="text" id="keyword"  value="<%= keyword%>" disabled>
    </div>
  </div>
  <div class="row">
    <label class="col-1 col-form-label">Abstract:</label>
    <div class="col-11">

<textarea
  id="abstract"
  name="abstract"
  rows="5" cols="124"
  value="<%= abstract%>"
  disabled
><%= abstract%></textarea>

    </div>
  </div>
</div>

<div id="firstQuery">

  <div class="form-group row">
    <label class="col-md-8 col-form-label">Consulta para encontrar nombre de autores similares</label>
    <div class="col-10">
      <input type="text" data-ng-Model="nuevoAuthorIn.autor1"  name="f1t1" id="f1t1" >

    </div>
  </div>

  <button class="btn btn-success" type="submit" ng-Click="addAuthor()">Busqueda</button>

  <br><br>
  <ul>
    <li ng-repeat="autor in autoresSeleccionado track by $index">
      {{autor.autor1}}
    </li>
  </ul>
</div>

<div id="query" style="margin:auto">

  <form class="form-inline">
    <label>SPARQL endpoint:</label><br>
    <div class="input-append">
      <input id="endpoint" class="span5" value="http://ieee.rkbexplorer.com/sparql/" type="text"  size=30 >
      <button class="btn btn-success" type="button" onclick="exec()">Query</button>
      <button hidden class="btn btn-success" type="button" onclick="recom()">Relacionados</button>
      <button class="btn btn-success" type="button" onclick="toggle()"><i id="button" class="fas fa-chevron-up"></i></button>
    </div>
  </form>

  <br>
  <textarea id="sparql" class="span9" rows=15 cols="100"></textarea>
  <br><br>
</div>
<div id="result"></div>
<!-- Button trigger modal -->
<!-- Modal -->
<div class="modal fade" id="metadataACM" tabindex="-1" role="dialog" aria-labelledby="metadataACMTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="metadataACMTitle">Metadatos ACM</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <textarea hidden id="sparqlTittle" class="span9" rows=15></textarea>
        <textarea hidden id="sparqlAuthor" class="span9" rows=15></textarea>
        <textarea hidden id="sparqlDate" class="span9" rows=15></textarea>
        <textarea hidden id="sparqlAbstract" class="span9" rows=15></textarea>
        <textarea hidden id="sparqlKeyword" class="span9" rows=15></textarea>
        <textarea hidden id="sparqlJournal" class="span9" rows=15></textarea>
        <textarea hidden id="sparqlWeb" class="span9" rows=15></textarea>
        <div id="resultMetadata"></div>

          <form action='/Wkx_category/crearArticuloQuemado' method='post'>
          <div class="row">
            <div class="col-md-12">
              <div class="card">
                <div class="fondo">
                  <div class="form-group row">
                    <label class="col-2 col-form-label">titulo:</label>
                    <div class="col-10">
                      <input class="form-control" type="text"  value="" id="titleEEE" name="title">
                    </div>
                  </div>
                  <div class="form-group row">
                    <label class="col-2 col-form-label">Autores:</label>
                    <div class="col-10" id="numAuthors">
                      <input class="form-control" type="text"  value="" id="nameIEEE" name="nombreAuthores">
                      <input hidden type='text' id="lastNameIEEE" name='apellidoAuthores' value='apellido2222'>
                      <input hidden type='number' name='numero_autores' value='1'>

                    </div>
                  </div>
                  <div class="form-group row">
                    <label class="col-2 col-form-label">fecha:</label>
                    <div class="col-10">
                      <input class="form-control" type="text"  value="" id="dateIEEE" name="year">
                    </div>
                  </div>
                  <div class="form-group row">
                    <label class="col-2 col-form-label">abstrac:</label>
                    <div class="col-10">
                      <input class="form-control" type="text"  value="" id="abstractIEEE" name="abstract">
                    </div>
                  </div>
                  <div class="form-group row">
                    <label class="col-2 col-form-label">Keyword:</label>
                    <div class="col-10">
                      <input class="form-control" type="text"  value="" id="keywordIEEE" name="keywords">
                    </div>
                  </div>
                  <div class="form-group row">
                    <label class="col-2 col-form-label">Direccion Web:</label>
                    <div class="col-10">
                      <input class="form-control" type="button"  value="" id="webIEEE" name="link"/>
                    </div>
                  </div>
                  <div class="form-group row">
                    <label class="col-2 col-form-label">Revista:</label>
                    <div class="col-10">
                      <input class="form-control" type="text"  value="" id="journalIEEE" name="editorial">
                      <input hidden type='text' name='typejournal' value='journal'>
                    </div>
                  </div>
                  <div class="form-group row">
                    <label class="col-2 col-form-label">Año Revista:</label>
                    <div class="col-10">
                      <input class="form-control" type="text"  value="" id="journalDateIEEE" name="journalDateIEEE">
                    </div>
                  </div>
                  <div class="form-group row">
                    <label class="col-2 col-form-label">Web Revista:</label>
                    <div class="col-10">
                      <input class="form-control" type="text"  value="" id="journalWebAddressIEEE" name="journalWebAddressIEEE">
                    </div>
                  </div>
                </div>
              </div>
              Visitar Direccion Web del recurso: <a id="webAddress"></a>
            </div>
          </div>
            <button class='btn btn-outline-primary'>Synchronize with wikindx</button>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save</button>
      </div>
    </div>
  </div>
</div>
<!-- end Modal -->
<div id="resultApi">
  <form action="" method="post">
    <div class="container" style="background-color: black">
      <div class="row">
        <img class="img-cabecera"
             src="https://www.acm.org/binaries/content/gallery/acm/ctas/fca_logo.jpg/fca_logo.jpg/acm%3Adesktopcta"
             alt=""
             width="100%">
      </div>
      <br>
      <div class="row">
        <div class="col-md-4" ng-repeat="autor in autores;">

          <div class="card">
            <h1>Autor Relacionado</h1>
            <img class="card-img-top"
                 src="http://www.anlagensicherheit.net/mt-medizintechnik/wp-content/uploads/2013/02/Autor_Bild.jpg"
                 alt="Card image cap"  height="200">
            <div class="fondo">
              <div class="form-group row">
                <label class="col-2 col-form-label">Nombre:</label>
                <div class="col-10">
                  <input class="form-control" type="text"  value=" {{autor.titleUri.value}}" id="name_Value" name="name_Value">
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="col-md-4"></div>
        <div class="col-md-4"></div>


      </div>
    </div>
  </form>
</div>





<!--test ingresar a wikindx-->
<div>

  <form action='/Wkx_category/crearArticuloQuemado' method='post'>
    <input  type='text' name='title' value='tituloooo prueba'>
    <!--<input hidden type='text' name='country' value='country pruebaaa '>-->
    <!--<input hidden type='text' name='number' value='number pureba'>-->
    <!--<input hidden type='text' name='volume' value='volume prueba'>-->
    <!--<input hidden type='text' name='issns' value='issns prueba'>-->
    <!--<input hidden type='text' name='language' value='language prueba'>-->
    <input hidden type='text' name='year' value='2009'>
    <input hidden type='text' name='journal' value='journal prueba'>
    <input hidden type='text' name='typejournal' value='journal dato quemado'>
    <input hidden type='text' name='editorial' value='editorial prueba'>
    <input hidden type='text' name='abstract' value='abstract pruebaaaaaaaa'>
    <input hidden type='text' name='keywords' value='keywords pruebaaa'>
    <!--<input hidden type='text' name='doi' value='doi'>-->
    <input hidden type='text' name='link' value='URlBase64'>
    <input hidden type='text' id= 'author'name='authores' value='autores'>
    <input hidden type='text' name='nombreAuthores' value='nombreA2222'>
    <input hidden type='text' name='apellidoAuthores' value='apellido2222'>
    <input hidden type='text' name='nombreAuthores1' value='nombreA12222'>
    <input hidden type='text' name='apellidoAuthores1' value='apellido1222222 '>
    <input hidden type='text' name='nombreAuthores2' value='nombreA22222'>
    <input hidden type='text' name='apellidoAuthores2' value='apellido222222'>
    <input hidden type='text' name='nombreAuthores3' value='nombreA3'>
    <input hidden type='text' name='apellidoAuthores3' value='apellido3'>
    <input hidden type='text' name='nombreAuthores4' value='nombreA4'>
    <input hidden type='text' name='apellidoAuthores4' value='apellido4'>
    <input hidden type='text' name='nombreAuthores5' value='nombreA5'>
    <input hidden type='text' name='apellidoAuthores5' value='apellido5'>
    <input hidden type='number' name='numero_autores' value='2'>
    <!--<input hidden type='text' name='starpage' value='135'>-->
    <!--<input hidden type='text' name='endpage' value='154'>-->
    <input hidden type='text' name='category' value='cate pruebaa'>
    <!--<input hidden type='text' name='pages' value='135 - 154'>-->
    <button class='btn btn-outline-primary'>Synchronize with wikindx</button>
    <br>
    <br>
  </form>

</div>













<script>
  ///////////////////////////Jquery
  $(document).ready(function(){
    //quitar las etiquetas innecesarias en la vista
    var contenido = abstract
    var texto = $(contenido).text();
    var res = texto.replace(/<[^>]*>?/g, '');
    $("#abstract").text(res);
    //modificar la salida de undefined
    var	a = $("#keyword").val()
    var	b = texto
    if(a == "undefined") {
      $("#keyword").val("This article does not contain keyword")
      $("#keyword").css({"font-style": "italic"})
      $("#keyword").css({"color": "Silver"})
    }
    if(b == "undefined") {
      $("#abstract").val("This article does not contain abstract")
      $("#abstract").css({"font-style": "italic"})
      $("#abstract").css({"color": "Silver"})
    }

    var titulo = $("#title").val();
    function dividirCadena (cadenaADividir,separador){
      var arrayDeCadena = cadenaADividir.split(separador);
      //Autores
      let parametro1 = arrayDeCadena[0]
      var consulta1 =  prefixIeee + "SELECT DISTINCT ?titleUri ?title\n"+
        "WHERE { ?titleUri akt:has-title ?title. FILTER regex(str(?title), '"+parametro1+"', 'i')} Limit 10"
      $("#sparql").text(consulta1);
    };
    var cadenaVerso = titulo
    var patron = ", ";
    var nuevoValor = " ";
    var nuevaCadena = cadenaVerso.replace(patron,nuevoValor);
    var espacio = " ";
    var coma = ",";
    dividirCadena(nuevaCadena,espacio);
    //dividirCadena(nuevaCadena,coma);

////////////tabla de resultados de la primera busqueda (d3sparql.htmltable2)
    d3sparql.htmltable2 = function(json, config) {
      config = config || {}
      var head = json.head.vars
      var data = json.results.bindings
      var opts = {
        "selector": config.selector || null
      }
      var table = d3sparql.select(opts.selector, "htmltable").append("table").attr("class", "table table-bordered")
      var thead = table.append("thead")
      var tbody = table.append("tbody")
      thead.append("tr")
        .selectAll("th")
        .data(head)
        .enter()
        .append("th")
        .text(function(col) { return col })
      var rows = tbody.selectAll("tr")
        .data(data)
        .enter()
        .append("tr")
      var cells = rows.selectAll("td")
        .data(function(row) {
          return head.map(function(col) {
            return row[col].value

          })
        })
        .enter()
        .append("td")
        .append("lu")
        .append("li")
        .append("button")
        .text(function(val) {return val })
      // default CSS

      table.style({
        "margin": "10px"
      })
      table.selectAll("th").style({
        "background": "#eeeeee",
        "text-transform": "capitalize",
      })
      for(i=0 ; i<data.length*2 ; i++) {
        if (i % 2 != 1 || i == 0){
          $("tbody tr td lu li:eq("+i+")").css("list-style","none")  //quita el punto de la lista
          $("tbody tr td lu li:eq("+i+") button").attr("id","btn"+i)
            .attr({
              "class": "btn btn-primary",
              "data-toggle": "modal",
              "data-target": "#metadataACM",
              "onclick":"web"+i+"()"
            })
        }
        else
        {
          $("tbody tr td lu li:eq("+i+")").css("list-style","none")//quita el punto de la lista
          $("tbody tr td lu li:eq("+i+") button").attr("id","btn"+i)

            .attr({
              "class": "btn btn-primary",
              "disabled":true,
              "onclick":"web"+i+"()"
            })
        }
      }
    }
  });   //end jquery
  /////////////////////////angular
  var app = angular.module("appRecommender",[]);
  app.controller("Controller",function ($scope,$http) {
    //Prefijos Publicaciones ACM
    let endPointAcm ="http://acm.rkbexplorer.com/sparql/?format=json&query=";
    let id_Prefix = "PREFIX+id%3A+++%3Chttp%3A%2F%2Facm.rkbexplorer.com%2Fid%2F%3E%0D%0A";
    let rdf_Prefix = "PREFIX+rdf%3A++%3Chttp%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23%3E%0D%0A";
    let rdfs_Prefix = "PREFIX+rdfs%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F2000%2F01%2Frdf-schema%23%3E%0D%0A";
    let akt_Prefix = "PREFIX+akt%3A++%3Chttp%3A%2F%2Fwww.aktors.org%2Fontology%2Fportal%23%3E%0D%0A";
    let owl_Prefix = "PREFIX+owl%3A++%3Chttp%3A%2F%2Fwww.w3.org%2F2002%2F07%2Fowl%23%3E%0D%0A";
    let akts_Prefix = "PREFIX+akts%3A+%3Chttp%3A%2F%2Fwww.aktors.org%2Fontology%2Fsupport%23%3E%0D%0A%0D%0A%0D%0A";
    $scope.nuevoAuthorIn = {};
    $scope.autoresSeleccionado = [];
    $scope.addAuthor = function () {
      $scope.autoresSeleccionado.push($scope.nuevoAuthorIn);
      $scope.nuevoAuthorIn ={};
      console.log("autor es:"+$scope.autoresSeleccionado.length);
      for(var i = 0;i<$scope.autoresSeleccionado.length;i ++){
        var nombres = $scope.autoresSeleccionado[i].autor1
        console.log("autor es:"+nombres);
      }
      function dividirCadena (cadenaADividir,separador){
        var arrayDeCadena = cadenaADividir.split(separador);
        console.log("la cadena original es:"+cadenaADividir);
        console.log("El Separador es:"+separador);
        console.log("El array tiene:"+arrayDeCadena.length);
        console.log("El array tiene:"+arrayDeCadena[0]);
        console.log("El array tiene:"+arrayDeCadena[1]);
        for (var j=0;j<arrayDeCadena.length;j++){
          console.log(arrayDeCadena[j]);
        }
        //Autores
        let name1 = arrayDeCadena[0]
        let apellido1 = arrayDeCadena[1]
        let select2 = "SELECT+DISTINCT+%3FtitleUri+";
        let where2="WHERE+%7B%3FtitleUri+akt%3Ahas-title+%3Fp.+" +
          "filter+%28%3Fp%3D%22"+name1+"%22%29%7D";
        let limit2="limit+100";
        var concatenacion2 = endPointAcm + id_Prefix+rdf_Prefix+rdfs_Prefix+akt_Prefix+owl_Prefix+akt_Prefix+akts_Prefix+select2+where2+limit2;
        //Consumo Api con la consulta por autores
        $http.get(concatenacion2)
          .success(function (data){
            console.log(data);
            $scope.autores = data.results.bindings;
            $scope.respuestaJson2= data;
            console.log("la url es:" + concatenacion2);
          })
          .error(function (err) {
          });
      };
      var cadenaVerso = nombres
      var patron = ", ";
      var nuevoValor = " ";
      var nuevaCadena = cadenaVerso.replace(patron,nuevoValor);
      var espacio = " ";
      //var coma = ",";
      dividirCadena(nuevaCadena,espacio);
      //dividirCadena(cadenaVerso,coma)
    };
  });
  /////////////////////////////// end angular
</script>
<br>
<br>
<br>
</body>
</html>




